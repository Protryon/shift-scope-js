"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serialize = exports.Accessibility = exports.DeclarationType = exports.ScopeType = exports.ScopeLookup = undefined;

var _scopeLookup = require("./scope-lookup");

Object.defineProperty(exports, "ScopeLookup", {
  enumerable: true,
  get: function get() {
    return _scopeLookup.default;
  }
});

var _scope = require("./scope");

Object.defineProperty(exports, "ScopeType", {
  enumerable: true,
  get: function get() {
    return _scope.ScopeType;
  }
});

var _declaration = require("./declaration");

Object.defineProperty(exports, "DeclarationType", {
  enumerable: true,
  get: function get() {
    return _declaration.DeclarationType;
  }
});

var _reference = require("./reference");

Object.defineProperty(exports, "Accessibility", {
  enumerable: true,
  get: function get() {
    return _reference.Accessibility;
  }
});

var _scopeSerializer = require("./scope-serializer");

Object.defineProperty(exports, "serialize", {
  enumerable: true,
  get: function get() {
    return _scopeSerializer.serialize;
  }
});
exports.default = analyze;

var _scopeAnalyzer = require("./scope-analyzer");

var _scopeAnalyzer2 = _interopRequireDefault(_scopeAnalyzer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright 2014 Shape Security, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// FIXME: the code generated by 6to5 should not have to require ES6 shims.
if (typeof Map === "undefined") require('es6-map/implement');
if (typeof Symbol === "undefined") require('es6-symbol/implement');

function analyze(script) {
  return _scopeAnalyzer2.default.analyze(script);
}